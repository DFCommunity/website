{"version":3,"sources":["webpack:///./src/components/theme/list-card.js","webpack:///./src/components/achievements/achievement-list.js","webpack:///./src/components/achievements/gsoc.js","webpack:///./src/components/achievements/internships.js","webpack:///./src/components/achievements/talks.js","webpack:///./src/components/achievements/summerSchool.js","webpack:///./src/pages/achievements.js","webpack:///./src/components/theme/getProfiles.js"],"names":["ListCard","username","firstName","lastName","avatar","tagline","title","icon","to","className","src","defaultAvatar","alt","style","width","maxWidth","minWidth","defaultProps","AchievementList","members","tagname","years","Set","map","obj","node","Year","useState","year","setYear","profiles","getProfiles","filtered","filter","member","name","onChange","event","target","value","key","profile","find","Member","id","childImageSharp","resize","query","render","data","allGSoCYaml","edges","allInternshipsYaml","allTalksYaml","allSummerSchoolYaml","Achievements","allMembersYaml"],"mappings":"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","file":"component---src-pages-achievements-js-e9a760e14c5671d8baee.js","sourcesContent":["import PropTypes from \"prop-types\"\nimport React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport defaultAvatar from \"../../images/defaults/avatar.png\"\n\nconst ListCard = ({ username, firstName, lastName, avatar, tagline, title, icon }) => (\n   username ?\n      (<Link to={\"/@\" + username} className=\"card\">\n        <div className=\"d-flex\">\n          <div className=\"p-0\">\n            <img\n              src={avatar ? avatar : defaultAvatar}\n              alt={firstName + \" \" + lastName + `'s photo`}\n            />\n          </div>\n          <div className=\"item-details\">\n            <div>\n              <h6> {firstName} {lastName} </h6>\n              <div className=\"list-tagline\">{tagline}</div>\n            </div>\n          </div>\n        </div>\n      </Link>) :\n      (<div className=\"card px-4 pt-4 pb-2 h-100 text-center my-2\">\n          <div className=\"mt-2\">\n            <img\n              src={icon ? icon : null}\n              alt={title}\n              style={{width: \"15vmax\", maxWidth: \"100%\", minWidth: \"180px\"}}\n            />\n          </div>\n          <h5 className=\"mt-4\">{title}</h5>\n          <div className=\"list-tagline\">{tagline}</div>\n      </div>)\n)\n\nListCard.propTypes = {\n  username: PropTypes.string,\n  firstName: PropTypes.string,\n  lastName: PropTypes.string,\n  avatar: PropTypes.string,\n  tagline: PropTypes.string,\n}\n\nListCard.defaultProps = {\n  username: \"\",\n  firstName: \"\",\n  lastName: \"\",\n  avatar: \"\",\n  tagline: \"\",\n}\n\nexport default ListCard\n","import React, { useState } from \"react\"\nimport getProfiles from \"../theme/getProfiles\"\nimport ListCard from \"../theme/list-card\"\n\nconst AchievementList = ({ title, members, tagname }) => {\n  let years = [...new Set( members.map(obj => obj.node.Year)) ]\n  const [year, setYear] = useState(years[0]);\n  const profiles = getProfiles()\n  let filtered = members.filter( member => member.node.Year == year)\n  return (\n    <div className=\"list-card card\">\n      <div className=\"list-heading d-flex\">\n        <div className=\"w-75\">{title}</div>\n        <div className=\"w-25\">\n          <select\n            name=\"years\"\n            onChange={event => setYear(event.target.value)}\n            value={year}\n          >\n            {\n              years.map((year, key) =>\n                <option key={key} value={year}>{year}</option>\n              )\n            }\n          </select>\n        </div>\n      </div>\n      {\n        filtered.map(member => {\n          let profile = profiles.find(\n            profile => profile.node.username === member.node.Member\n          )\n          const tagline = member.node[tagname]\n          return profile ?\n            <ListCard\n              key={member.node.id}\n              username={profile.node.username}\n              firstName={profile.node.firstName}\n              lastName={profile.node.lastName}\n              tagline={tagline}\n              avatar={profile.node.avatar ? profile.node.avatar.childImageSharp.resize.src : null}\n            /> : null\n        })\n      }\n    </div>\n  )\n}\n\nexport default AchievementList;","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport AchievementList from \"./achievement-list\"\n\nexport default () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        allGSoCYaml {\n          totalCount\n          edges {\n            node {\n              id\n              Member\n              Year\n              Org\n            }\n          }\n        }\n      }\n    `}\n    render={data => (\n      <div className=\"p-2\">\n          <AchievementList title=\"Google Summer of Code\" members={data.allGSoCYaml.edges} tagname=\"Org\" />\n      </div>\n    )}\n  />\n)\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport AchievementList from \"./achievement-list\"\n\nexport default () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        allInternshipsYaml {\n          totalCount\n          edges {\n            node {\n              id\n              Member\n              Year\n              Company\n            }\n          }\n        }\n      }\n    `}\n    render={data => (\n      <div className=\"p-2\">\n        <AchievementList title=\"Internships\"  members={data.allInternshipsYaml.edges} tagname=\"Company\" />\n      </div>\n    )}\n  />\n)\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport AchievementList from \"./achievement-list\"\n\nexport default () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        allTalksYaml {\n          totalCount\n          edges {\n            node {\n              id\n              Member\n              Event\n              Year\n            }\n          }\n        }\n      }\n    `}\n    render={data => (\n      <div className=\"p-2\">\n          <AchievementList title=\"Speaker (Talks)\" members={data.allTalksYaml.edges} tagname=\"Event\" />\n      </div>\n    )}\n  />\n)\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport AchievementList from \"./achievement-list\"\n\nexport default () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        allSummerSchoolYaml {\n          totalCount\n          edges {\n            node {\n              id\n              Member\n              Year\n              University\n            }\n          }\n        }\n      }\n    `}\n    render={data => (\n      <div className=\"p-2\">\n        <AchievementList title=\"Summer School\"  members={data.allSummerSchoolYaml.edges} tagname=\"University\" />\n      </div>\n    )}\n  />\n)\n","import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport TitleBar from \"../components/theme/title-bar\"\n\nimport GSoC from \"../components/achievements/gsoc\"\nimport Internship from \"../components/achievements/internships\"\nimport Talks from \"../components/achievements/talks\"\nimport SummerSchool from \"../components/achievements/summerSchool\"\n\nconst Achievements = () => (\n  <Layout>\n    <SEO title=\"Achievements\" />\n    <TitleBar title=\"Achievements\" />\n    <div className=\"row m-0 px-2 py-4\">\n      <div className=\"col-md-6 col-lg-4 px-2 py-0\">\n        <GSoC />\n      </div>\n      <div className=\"col-md-6 col-lg-4 px-2 py-0\">\n        <Internship />\n      </div>\n      <div className=\"col-md-6 col-lg-4 px-2 py-0\">\n        <SummerSchool />\n        <Talks />\n      </div>\n    </div>\n  </Layout>\n)\n\nexport default Achievements\n","import { useStaticQuery, graphql } from \"gatsby\"\n\nexport default () => {\n  const data = useStaticQuery(graphql`\n    {\n      allMembersYaml {\n        edges {\n          node {\n            firstName\n            lastName\n            username\n            avatar {\n              childImageSharp {\n                resize {\n                  src\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n  return data.allMembersYaml.edges\n}\n"],"sourceRoot":""}